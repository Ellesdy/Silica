/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SilicaAIController,
  SilicaAIControllerInterface,
} from "../../contracts/SilicaAIController";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_silicaToken",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "decisionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "decisionType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "rationale",
        type: "string",
      },
    ],
    name: "DecisionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "buyThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxTradePercentage",
        type: "uint256",
      },
    ],
    name: "ThresholdsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "rationale",
        type: "string",
      },
    ],
    name: "TokensBurned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "rationale",
        type: "string",
      },
    ],
    name: "TokensMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "rationale",
        type: "string",
      },
    ],
    name: "TradeExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "AI_OPERATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HUMAN_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addAIOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "rationale",
        type: "string",
      },
    ],
    name: "burnTokensFromTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "buyThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decisionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "decisions",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "decisionType",
        type: "string",
      },
      {
        internalType: "string",
        name: "rationale",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "executionData",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "decisionType",
        type: "string",
      },
      {
        internalType: "string",
        name: "rationale",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "executionData",
        type: "bytes",
      },
    ],
    name: "executeDecision",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "rationale",
        type: "string",
      },
    ],
    name: "executeTrade",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "getDecisions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "decisionType",
            type: "string",
          },
          {
            internalType: "string",
            name: "rationale",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "executionData",
            type: "bytes",
          },
        ],
        internalType: "struct SilicaAIController.AIDecision[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDecisionTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTradePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "rationale",
        type: "string",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeAIOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "silicaToken",
    outputs: [
      {
        internalType: "contract SilicaToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "contract SilicaTreasury",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_buyThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxTradePercentage",
        type: "uint256",
      },
    ],
    name: "updateThresholds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60803461022457601f61217938819003918201601f19168301916001600160401b038311848410176102295780849260409485528339810103126102245780516001600160a01b038116919082900361022457602001516001600160a01b0381169190829003610224576001805560006006819055600019600755600a600855600280546001600160a01b031990811693909317905560038054909216929092179055338152600080516020612159833981519152602052604090205460ff16156101e4575b3360009081526000805160206120f9833981519152602052604090205460ff1615610182575b336000908152600080516020612139833981519152602052604090205460ff1615610120575b604051611eb990816102408239f35b33600081815260008051602061213983398151915260205260408120805460ff1916600117905581907f48868f588032c2767aa096056904be47c4801b46f0d2481a28ff6b4d3dfae5f3906000805160206121198339815191529080a4610111565b3360008181526000805160206120f983398151915260205260408120805460ff1916600117905581907ff2652dbcd69c7c357910d3afb4ed41a5b1835967baaff149b775d7dbd6375f19906000805160206121198339815191529080a46100eb565b33600081815260008051602061215983398151915260205260408120805460ff1916600117905581906000805160206121198339815191528180a46100c5565b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c90816301ffc9a71461165a57508063100b63cb1461163c5780631d808cd314611422578063248a9ca3146113ec5780632d4310c0146113ce5780632f2ff15d1461131057806336568abe1461127d5780634124483c1461124257806348a8dcf714610dcc57806351fbd40514610dae57806361d027b314610d855780636f4b108714610be557806378b516cf14610667578063901b75ae146105a557806391d148541461055a5780639ebd6d3514610494578063a217fddf14610478578063b57f272e1461045a578063b829df82146103a0578063d547741f14610357578063e67524a314610260578063e949ed0914610237578063f13cff4114610219578063fb3d2e05146101f05763fd19e10c0361000f57346101ed5760603660031901126101ed5760443560243560043561015b6119d6565b606483116101a8577f5c18dc8d95da80ea715f2473abe6f01199d4bfa87d2ed1ef051058a60dcce2589260609282600655806007558160085560405192835260208301526040820152a180f35b60405162461bcd60e51b815260206004820152601960248201527f50657263656e74616765206d757374206265203c3d20313030000000000000006044820152606490fd5b80fd5b50346101ed57806003193601126101ed576020604051600080516020611e648339815191528152f35b50346101ed57806003193601126101ed576020600654604051908152f35b50346101ed57806003193601126101ed576002546040516001600160a01b039091168152602090f35b50346101ed5760603660031901126101ed5761027a61170d565b6024356044356001600160401b0381116103445761029c903690600401611790565b916102a56119d6565b60025484906001600160a01b0316803b1561035357604051631b7fe1a960e31b81526001600160a01b0384166004820152602481018590529082908290604490829084905af180156103485761032f575b50506103297f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc93604051938493846119af565b0390a180f35b8161033991611754565b6103445783386102f6565b8380fd5b6040513d84823e3d90fd5b5080fd5b50346101ed5760403660031901126101ed5761039d6004356103776116f7565b9061039861039382600052600060205260016040600020015490565b611b50565b611b8e565b80f35b50346101ed5760203660031901126101ed57600435600954811015610353576103c8906117d5565b5080546104566003610448604051946103ef866103e88160018501611844565b0387611754565b61041e6040519161040e836104078160028501611844565b0384611754565b6104076040518096819301611844565b61043a60405196879687526080602088015260808701906116d2565b9085820360408701526116d2565b9083820360608501526116d2565b0390f35b50346101ed57806003193601126101ed576020600854604051908152f35b50346101ed57806003193601126101ed57602090604051908152f35b50346101ed5760203660031901126101ed576104ae61170d565b6104b6611add565b600080516020611e648339815191528252602082815260408084206001600160a01b0384166000908152925290205460ff16156104f1575080f35b600080516020611e64833981519152808352602083815260408085206001600160a01b0394909416600081815294909252909220805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a480f35b50346101ed5760403660031901126101ed5760406105766116f7565b91600435815280602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50346101ed5760203660031901126101ed576105bf61170d565b6105c7611add565b600080516020611e648339815191528252602082815260408084206001600160a01b0384166000908152925290205460ff16610601575080f35b600080516020611e64833981519152808352602083815260408085206001600160a01b0394909416600081815294909252909220805460ff191690553391907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8480a480f35b50346101ed5760e03660031901126101ed5761068161170d565b9061068a6116f7565b60843592906044356001600160a01b03851685036103445760a4356001600160401b038111610b5d576106c1903690600401611790565b9360c4356001600160401b038111610353576106e1903690600401611790565b926106ea6119d6565b6106f2611c10565b6001600160a01b038516948515908115610a47575b506001600160a01b03821697881597849089156109ca57819247945b156109c457875b602083519301915af161073b611967565b50156109915786156109195761075190476118c7565b9560643587106108d4576108a35760035460405163095ea7b360e01b81526001600160a01b03909116600482015260248101879052602081604481868c5af180156108985761086b575b506003546001600160a01b031690813b156108675760405163921b004b60e01b81526001600160a01b03919091166004820152602481018790529082908290604490829084905af1801561034857610852575b505091610843602095927fcfb39639b1025742e186f857fcd1216c03f2cf5e45053966934621ab2464bf2d945b604051948594855288850152604084015285606084015260a0608084015260a08301906116d2565b0390a160018055604051908152f35b61085d828092611754565b6101ed57806107ee565b8280fd5b61088c9060203d602011610891575b6108848183611754565b810190611997565b61079b565b503d61087a565b6040513d85823e3d90fd5b505091610843602095927fcfb39639b1025742e186f857fcd1216c03f2cf5e45053966934621ab2464bf2d9461081b565b60405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e74206f757470757420616d6f756e740000000000006044820152606490fd5b6040516370a0823160e01b8152306004820152906020826024818c5afa801561098657849061094d575b61075192506118c7565b506020823d60201161097e575b8161096760209383611754565b81010312610979576107519151610943565b600080fd5b3d915061095a565b6040513d86823e3d90fd5b60405162461bcd60e51b815260206004820152600b60248201526a14ddd85c0819985a5b195960aa1b6044820152606490fd5b8261072a565b6040516370a0823160e01b81523060048201529091506020816024818e5afa908115610a3c57908692918391610a05575b5092829394610723565b9250506020823d602011610a34575b81610a2160209383611754565b81010312610979579051859190826109fb565b3d9150610a14565b6040513d88823e3d90fd5b6003546040516370a0823160e01b81526001600160a01b039091166004820181905291906020816024818c5afa908115610a3c578691610bb3575b5060085490818102918183041490151715610b9f57606490048611610b6157813b15610b5d57604051631c20fadd60e01b81526001600160a01b03919091166004820152306024820152604481018690529084908290606490829084905af1801561098657908491610b48575b505060405163095ea7b360e01b81526001600160a01b038916600482015260248101859052602081604481878b5af18015610986571561070757610b419060203d602011610891576108848183611754565b5038610707565b81610b5291611754565b610867578238610aef565b8480fd5b60405162461bcd60e51b815260206004820152601660248201527554726164652065786365656473206d61782073697a6560501b6044820152606490fd5b634e487b7160e01b86526011600452602486fd5b90506020813d602011610bdd575b81610bce60209383611754565b81010312610979575138610a82565b3d9150610bc1565b50346101ed5760403660031901126101ed576004356024356001600160401b03811161086757610c19903690600401611790565b610c216119d6565b6003546002546001600160a01b0391821691859116823b1561035357604051631c20fadd60e01b81526001600160a01b0391909116600482015230602482015260448101859052918290606490829084905af1801561098657610d71575b5060025460405163095ea7b360e01b81526001600160a01b0390911660048201819052602482018490526020908290604490829088905af1801561098657610d54575b5060025483906001600160a01b0316803b1561035357604051631761edb160e31b8152306004820152602481018590529082908290604490829084905af1801561034857610d3f575b50507ffad31924d655455395c87544c8aa1ffdb5a7505a22a3c2e03f28003b6556a75f9161032960405192839230846119af565b81610d4991611754565b610867578238610d0b565b610d6c9060203d602011610891576108848183611754565b610cc2565b83610d7e91949294611754565b9138610c7f565b50346101ed57806003193601126101ed576003546040516001600160a01b039091168152602090f35b50346101ed57806003193601126101ed576020600454604051908152f35b50346101ed5760603660031901126101ed576004356001600160401b03811161035357610dfd903690600401611790565b6024356001600160401b03811161086757610e1c903690600401611790565b916044356001600160401b03811161035357610e3c903690600401611790565b90610e456119d6565b610e4d611c10565b60095491604051610e5d81611723565b42815260208101908582526040810187815260608201928484526801000000000000000087101561122e5760018701600955610e98876117d5565b93909361121a5751835551805160018401916001600160401b03821161120657610ecc82610ec6855461180a565b85611915565b602090601f83116001146111a357610efc92918991836110a7575b50508160011b916000199060031b1c19161790565b90555b51805160028301916001600160401b03821161118f57610f2382610ec6855461180a565b602090601f8311600114611129579180610f579260039695948a926110a75750508160011b916000199060031b1c19161790565b90555b0190518051906001600160401b03821161111557610f7c82610ec6855461180a565b602090601f83116001146110b257610fab92918691836110a75750508160011b916000199060031b1c19161790565b90555b426004556005546000198114611093576001016005558051829160200182305af191610fd8611967565b921561104e5761101e7fe942e0951e8e2df559798f843576bb700742ec4b4570eebe25697095de005f1b9161102c610456966040519384936040855260408501906116d2565b9083820360208501526116d2565b0390a260018055604051918291600183526040602084015260408301906116d2565b60405162461bcd60e51b815260206004820152601960248201527f4465636973696f6e20657865637574696f6e206661696c6564000000000000006044820152606490fd5b634e487b7160e01b83526011600452602483fd5b015190503880610ee7565b8386528186209190601f198416875b8181106110fd57509084600195949392106110e4575b505050811b019055610fae565b015160001960f88460031b161c191690553880806110d7565b929360206001819287860151815501950193016110c1565b634e487b7160e01b85526041600452602485fd5b8388528188209190601f198416895b81811061117757509160019391856003989796941061115f575b505050811b019055610f5a565b015160001983881b60f8161c19169055388080611152565b92936020600181928786015181550195019301611138565b634e487b7160e01b87526041600452602487fd5b8389528189209190601f1984168a5b8181106111ee57509084600195949392106111d5575b505050811b019055610eff565b015160001960f88460031b161c191690553880806111c8565b929360206001819287860151815501950193016111b2565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b87526004879052602487fd5b634e487b7160e01b86526041600452602486fd5b50346101ed57806003193601126101ed5760206040517ff2652dbcd69c7c357910d3afb4ed41a5b1835967baaff149b775d7dbd6375f198152f35b50346101ed5760403660031901126101ed576112976116f7565b336001600160a01b038216036112b35761039d90600435611b8e565b60405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608490fd5b50346101ed5760403660031901126101ed5760043561132d6116f7565b9061134961039382600052600060205260016040600020015490565b808352602083815260408085206001600160a01b038516865290915283205460ff1615611374578280f35b808352602083815260408085206001600160a01b0394909416808652939091528320805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8480a438808280f35b50346101ed57806003193601126101ed576020600754604051908152f35b50346101ed5760203660031901126101ed57602061141a600435600052600060205260016040600020015490565b604051908152f35b50346101ed5760403660031901126101ed5760043560243580821080611630575b156115fb5761145282826118c7565b9161145c836118ea565b9261146a6040519485611754565b808452611479601f19916118ea565b01845b8181106115ca575050805b8281106115345783856040519182916020830160208452825180915260408401602060408360051b870101940192905b8282106114c657505050500390f35b919360019193955060206115248192603f198a82030186528851908151815260606115136115018685015160808886015260808501906116d2565b604085015184820360408601526116d2565b9201519060608184039101526116d2565b96019201920185949391926114b7565b806115c36115436001936117d5565b5061154e85846118c7565b9060036115ad6040519261156184611723565b8054845260405161157f81611578818c8601611844565b0382611754565b6020850152604051611598816115788160028601611844565b60408501526115786040518094819301611844565b60608201526115bc8289611901565b5286611901565b5001611487565b6020906040516115d981611723565b878152606083820152606060408201526060808201528282880101520161147c565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642072616e676560981b6044820152606490fd5b50600954811115611443565b50346101ed57806003193601126101ed576020600554604051908152f35b9050346103535760203660031901126103535760043563ffffffff60e01b81168091036108675760209250637965db0b60e01b811490811561169e575b5015158152f35b6301ffc9a760e01b14905038611697565b60005b8381106116c25750506000910152565b81810151838201526020016116b2565b906020916116eb815180928185528580860191016116af565b601f01601f1916010190565b602435906001600160a01b038216820361097957565b600435906001600160a01b038216820361097957565b608081019081106001600160401b0382111761173e57604052565b634e487b7160e01b600052604160045260246000fd5b90601f801991011681019081106001600160401b0382111761173e57604052565b6001600160401b03811161173e57601f01601f191660200190565b81601f82011215610979576020813591016117aa82611775565b926117b86040519485611754565b828452828201116109795781600092602092838601378301015290565b6009548110156117f457600960005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c9216801561183a575b602083101461182457565b634e487b7160e01b600052602260045260246000fd5b91607f1691611819565b600092918154916118548361180a565b80835292600181169081156118aa575060011461187057505050565b60009081526020812093945091925b838310611890575060209250010190565b60018160209294939454838587010152019101919061187f565b915050602093945060ff929192191683830152151560051b010190565b919082039182116118d457565b634e487b7160e01b600052601160045260246000fd5b6001600160401b03811161173e5760051b60200190565b80518210156117f45760209160051b010190565b601f821161192257505050565b6000526020600020906020601f840160051c8301931061195d575b601f0160051c01905b818110611951575050565b60008155600101611946565b909150819061193d565b3d15611992573d9061197882611775565b916119866040519384611754565b82523d6000602084013e565b606090565b90816020910312610979575180151581036109795790565b6119d3939260609260018060a01b03168252602082015281604082015201906116d2565b90565b3360009081527f82f9588b0461dd6f85c741c2d077444688407204b11b9d91aca7d73ce23e497f602052604090205460ff1615611a0f57565b611ad9611a1b33611c77565b611ab96011611a37600080516020611e64833981519152611db7565b9260376040519485927f416363657373436f6e74726f6c3a206163636f756e74200000000000000000006020850152611a7981518092602086880191016116af565b83017001034b99036b4b9b9b4b733903937b6329607d1b83820152611aa88251809360206048850191016116af565b01010301601f198101835282611754565b60405162461bcd60e51b81526020600482015291829160248301906116d2565b0390fd5b3360009081527f26163bdd9d59505f2e3cd9d90a08460d88e10a07303f796167274e4fa7032e3a602052604090205460ff1615611b1657565b611ad9611b2233611c77565b611ab96011611a377ff2652dbcd69c7c357910d3afb4ed41a5b1835967baaff149b775d7dbd6375f19611db7565b60008181526020818152604080832033845290915290205460ff1615611b735750565b611ad990611ab96011611a37611b8833611c77565b93611db7565b6000818152602081815260408083206001600160a01b038616845290915290205460ff16611bba575050565b6000818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4565b600260015414611c21576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9081518110156117f4570160200190565b600090611c84602a611775565b91611c926040519384611754565b602a8352611ca0602a611775565b6020840190601f1901368237835115611da35760309053825160011015611d8f576078602184015350602960005b60018211611d23575050611cdf5790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015611d7b576f181899199a1a9b1b9c1cb0b131b232b360811b901a611d528486611c66565b5360041c918015611d67576000190190611cce565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b82526032600452602482fd5b600090611dc46042611775565b91611dd26040519384611754565b60428352611de06042611775565b6020840190601f1901368237835115611da35760309053825160011015611d8f576078602184015350604160005b60018211611e1f575050611cdf5790565b9091600f81166010811015611d7b576f181899199a1a9b1b9c1cb0b131b232b360811b901a611e4e8486611c66565b5360041c918015611d67576000190190611e0e56fe48868f588032c2767aa096056904be47c4801b46f0d2481a28ff6b4d3dfae5f3a26469706673582212208552d6c0d05fadb16f114ab037d7683cd4afba30078bcf36532b2507f58d5dba64736f6c634300081c003326163bdd9d59505f2e3cd9d90a08460d88e10a07303f796167274e4fa7032e3a2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d82f9588b0461dd6f85c741c2d077444688407204b11b9d91aca7d73ce23e497fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5";

type SilicaAIControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SilicaAIControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SilicaAIController__factory extends ContractFactory {
  constructor(...args: SilicaAIControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _silicaToken: AddressLike,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_silicaToken, _treasury, overrides || {});
  }
  override deploy(
    _silicaToken: AddressLike,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_silicaToken, _treasury, overrides || {}) as Promise<
      SilicaAIController & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SilicaAIController__factory {
    return super.connect(runner) as SilicaAIController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SilicaAIControllerInterface {
    return new Interface(_abi) as SilicaAIControllerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SilicaAIController {
    return new Contract(address, _abi, runner) as unknown as SilicaAIController;
  }
}
